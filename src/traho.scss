:root {
    --traho-font-family: system-ui,-apple-system,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans","Liberation Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
    --traho-body-font-size: 1.2rem;
    --traho-body-line-height: 1.5;
/**
 * Heading sizes
 */
    --traho-1-heading: 2.5rem;
    --traho-2-heading: 3rem;
    --traho-3-heading: 3.5rem;
    --traho-4-heading: 4rem;
    --traho-5-heading: 4.5rem;
    --traho-6-heading: 5rem;
    --traho-7-heading: 5.5rem;
    --traho-8-heading: 6rem;
/**
 * Spacing sizes (margins and paddings)
 */
    --traho-1-spacing: 0.50rem;
    --traho-2-spacing: 0.75rem;
    --traho-3-spacing: 1rem;
    --traho-4-spacing: 1.50rem;
    --traho-5-spacing: 1.75rem;
    --traho-6-spacing: 2rem;
    --traho-7-spacing: 2.75rem;
    --traho-8-spacing: 3rem;
    --traho-9-spacing: 3.50rem;
    --traho-10-spacing: 3.75rem;
}

$enable-grid-classes: true;
$enable-cssgrid: true;
$grid-gutter-width: 1.5rem !default;
$variable-prefix: traho;
$grid-columns: 12 !default;
$grid-row-columns: 6 !default;
$grid-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px
) !default;

@import "functions";
@import "mixins/breakpoints";
@import "borders";
@import "buttons";
@import "colors";
@import "typography";
@import "spacings";
@import "grid";

// @media (prefers-color-scheme: dark) {
//     // 
// }

/**
 * Reset default browser appearance
 */
* {box-sizing: border-box}
body, h1, h2, h3, h4, h5, h6, p {
    margin: 0; padding: 0;
}

body {
    font-family: var(--traho-font-family);
    font-size: var(--traho-body-font-size);
    line-height: var(--traho-body-line-height);
}

/**
 * Paragraphs
 */
p {
    margin-bottom: 1rem;
}
$vhs: 20, 30, 40, 50, 60, 70, 80, 90, 100;
@each $vh in $vhs {
    .vh-#{$vh} {
        height: $vh + vh;
    }
}

/**
 * Containers, rows and grids
 */
.container, .container-fluid {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    padding-right: var(--traho-gutter-x,.75rem);
}

.row {
    --traho-gutter-x: 1.5rem;
    --traho-gutter-y: 0;
    display: flex;
    flex-wrap: wrap;
    margin-top: calc(-1 * var(--traho-gutter-y));
    margin-right: calc(-.5 * var(--traho-gutter-x));
    margin-left: calc(-.5 * var(--traho-gutter-x));
}

@media (min-width: 1400px) {
    .container {
        max-width: 1320px;
    }
}


/**
 * Content and text alignments
 * https://developer.mozilla.org/en-US/docs/Web/CSS/align-content
 */
$alignments: center, start, end, flex-start, flex-end, normal, baseline,
             first baseline, last baseline, space-between, space-around,
             space-evenly, stretch, safe center, unsafe center, inherit, initial, revert, unset;
@each $alignment in $alignments {
    $alignPropertyID: str-replace(#{$alignment}, ' ', '-');
    .align-content-#{$alignPropertyID} {
        align-content: #{$alignment}
    }
}

/**
 * Displayment and Opacity
 */
$displays: block, inline, inline-block, flex, inline-flex, grid, inline-grid, flow-root,
           none, contents, table, table-row, list-item, inherit, initial, revert, unset;
@each $display in $displays {
    .d-#{$display} {
        display: $display;
    }
}
$alphas: 9,8,7,6,5,4,3,2,1,0;
@each $alpha in $alphas {
    .opacity-#{$alpha} {
        @if $alpha != 1 and $alpha != 0 {
            opacity: #{10% * ($alpha)}
        } @else {
            opacity: $alpha;
        }
    }
}
